--<ScriptOptions statementTerminator=";"/>

ALTER TABLE "DIMIF"."DATAQUALITYLOG" DROP CONSTRAINT "DATAQUALITYLOG_DATAQUALITY_FK";

ALTER TABLE "DIMIF"."LEVERING" DROP CONSTRAINT "LEVERING_BRON_FK";

ALTER TABLE "DIMIF"."LEVERING" DROP CONSTRAINT "LEVERING_BRON_FK1";

ALTER TABLE "DIMIF"."LEVERING" DROP CONSTRAINT "LEVERING_LEVERINGTYPE_FK";

ALTER TABLE "DIMIF"."LEVERINGBESTAND" DROP CONSTRAINT "LEVERINGBESTA_LEVERINGREVIS_FK";

ALTER TABLE "DIMIF"."LEVERINGBESTANDEN" DROP CONSTRAINT "LEVERINGBESTAN_LEVERINGBEST_FK";

ALTER TABLE "DIMIF"."LEVERINGDATABASELINK" DROP CONSTRAINT "LEVERINGDATABAS_LEVERINGRE_FK";

ALTER TABLE "DIMIF"."LEVERINGDATAPUMP" DROP CONSTRAINT "LEVERINGDATAP_LEVERINGREVI_FK";

ALTER TABLE "DIMIF"."LEVERINGKOLOM" DROP CONSTRAINT "LEVERINGKOLOM_LEVERINGTABEL_FK";

ALTER TABLE "DIMIF"."LEVERINGREVISIE" DROP CONSTRAINT "LEVERINGREVISIE_LEVERING_FK";

ALTER TABLE "DIMIF"."LEVERINGREVISIE" DROP CONSTRAINT "LEVERINGREVISIE_LEVERING_FK1";

ALTER TABLE "DIMIF"."LEVERINGREVISIE" DROP CONSTRAINT "LEVERINGREVISIE_LEVERING_FK2";

ALTER TABLE "DIMIF"."LEVERINGREVISIE" DROP CONSTRAINT "LEVERINGREVISIE_LEVERING_FK3";

ALTER TABLE "DIMIF"."LEVERINGREVISIE" DROP CONSTRAINT "LEVERINGREVIS_LEVERINGINHO_FK";

ALTER TABLE "DIMIF"."LEVERINGTABEL" DROP CONSTRAINT "LEVERINGTABE_LEVERINGREVISI_FK";

ALTER TABLE "DIMIF"."VERWERKING" DROP CONSTRAINT "VERWERKING_BRON_FK";

ALTER TABLE "DIMIF"."VERWERKINGBESTAND" DROP CONSTRAINT "VERWERKINGBES_VERWERKINGREV_FK";

ALTER TABLE "DIMIF"."VERWERKINGDATABASELINK" DROP CONSTRAINT "VERWERKINGDATAB_VERWERKING_FK";

ALTER TABLE "DIMIF"."VERWERKINGDATAPUMP" DROP CONSTRAINT "VERWERKINGDAT_VERWERKINGRE_FK";

ALTER TABLE "DIMIF"."VERWERKINGKOLOM" DROP CONSTRAINT "VERWERKINGKOLO_MASKERINGTYP_FK";

ALTER TABLE "DIMIF"."VERWERKINGKOLOM" DROP CONSTRAINT "VERWERKINGKOL_VERWERKINGTAB_FK";

ALTER TABLE "DIMIF"."VERWERKINGREVISIE" DROP CONSTRAINT "VERWERKINGREVISI_VERWERKIN_FK";

ALTER TABLE "DIMIF"."VERWERKINGTABEL" DROP CONSTRAINT "VERWERKINGTA_VERWERKINGREVI_FK";

ALTER TABLE "DIMIF"."VERWERKINGTABEL" DROP CONSTRAINT "VERWERKINGT_VERWERKINGTYPE_FK";

ALTER TABLE "DIMIF"."BRON" DROP CONSTRAINT "BRON_PK";

ALTER TABLE "DIMIF"."DATAQUALITY" DROP CONSTRAINT "DATAQUALITY_PK";

ALTER TABLE "DIMIF"."DATAQUALITYLOG" DROP CONSTRAINT "DATAQUALITYLOG_PK";

ALTER TABLE "DIMIF"."LEVERING" DROP CONSTRAINT "LEVERING_PK";

ALTER TABLE "DIMIF"."LEVERINGBESTAND" DROP CONSTRAINT "LEVERINGBESTAND_PK";

ALTER TABLE "DIMIF"."LEVERINGBESTANDEN" DROP CONSTRAINT "LEVERINGBESTANDEN_PK";

ALTER TABLE "DIMIF"."LEVERINGDATABASELINK" DROP CONSTRAINT "LEVERINGDATABASELINK_PK";

ALTER TABLE "DIMIF"."LEVERINGDATAPUMP" DROP CONSTRAINT "LEVERINGDATAPUMP_PK";

ALTER TABLE "DIMIF"."LEVERINGINHOUD" DROP CONSTRAINT "LEVERINGINHOUD_PK";

ALTER TABLE "DIMIF"."LEVERINGKOLOM" DROP CONSTRAINT "LEVERINGKOLOM_PK";

ALTER TABLE "DIMIF"."LEVERINGREVISIE" DROP CONSTRAINT "LEVERINGREVISIE_PK";

ALTER TABLE "DIMIF"."LEVERINGTABEL" DROP CONSTRAINT "LEVERINGTABEL_PK";

ALTER TABLE "DIMIF"."LEVERINGTYPE" DROP CONSTRAINT "LEVERINGTYPE_PK";

ALTER TABLE "DIMIF"."MASKERINGTYPE" DROP CONSTRAINT "MASKERINGTYPE_PK";

ALTER TABLE "DIMIF"."VERWERKING" DROP CONSTRAINT "VERWERKING_PK";

ALTER TABLE "DIMIF"."VERWERKINGKOLOM" DROP CONSTRAINT "VERWERKINGKOLOM_PK";

ALTER TABLE "DIMIF"."VERWERKINGREVISIE" DROP CONSTRAINT "VERWERKINGREVISIE_PK";

ALTER TABLE "DIMIF"."VERWERKINGTABEL" DROP CONSTRAINT "VERWERKINGTABEL_PK";

ALTER TABLE "DIMIF"."VERWERKINGTYPEDATA" DROP CONSTRAINT "VERWERKINGTYPEDATA_PK";

DROP TABLE "DIMIF"."BRON";

DROP TABLE "DIMIF"."DATAQUALITY";

DROP TABLE "DIMIF"."DATAQUALITYLOG";

DROP TABLE "DIMIF"."LEVERING";

DROP TABLE "DIMIF"."LEVERINGBESTAND";

DROP TABLE "DIMIF"."LEVERINGBESTANDEN";

DROP TABLE "DIMIF"."LEVERINGDATABASELINK";

DROP TABLE "DIMIF"."LEVERINGDATAPUMP";

DROP TABLE "DIMIF"."LEVERINGINHOUD";

DROP TABLE "DIMIF"."LEVERINGKOLOM";

DROP TABLE "DIMIF"."LEVERINGREVISIE";

DROP TABLE "DIMIF"."LEVERINGTABEL";

DROP TABLE "DIMIF"."LEVERINGTYPE";

DROP TABLE "DIMIF"."MASKERINGTYPE";

DROP TABLE "DIMIF"."VERWERKING";

DROP TABLE "DIMIF"."VERWERKINGBESTAND";

DROP TABLE "DIMIF"."VERWERKINGDATABASELINK";

DROP TABLE "DIMIF"."VERWERKINGDATAPUMP";

DROP TABLE "DIMIF"."VERWERKINGKOLOM";

DROP TABLE "DIMIF"."VERWERKINGREVISIE";

DROP TABLE "DIMIF"."VERWERKINGTABEL";

DROP TABLE "DIMIF"."VERWERKINGTYPEDATA";

CREATE TABLE "DIMIF"."BRON" (
		"BRON" VARCHAR2(80) NOT NULL,
		"INTERFACE" VARCHAR2(80),
		"EMAIL" VARCHAR2(250),
		"TELEFOON" VARCHAR2(20),
		"OPVOERDATUM" DATE,
		"OMSCHRIJVING" VARCHAR2(200),
		"ARCHIVERINGSMETHODE" CHAR(5)
	);

CREATE TABLE "DIMIF"."DATAQUALITY" (
		"SCHEMANAAM" VARCHAR2(80) NOT NULL,
		"TABELNAAM" VARCHAR2(160) NOT NULL,
		"DQNAAM" VARCHAR2(80) NOT NULL,
		"DQQUERY" VARCHAR2(4000) NOT NULL,
		"DQIMPACTLEVEL" NUMBER NOT NULL,
		"DQALERT" NUMBER NOT NULL
	);

CREATE TABLE "DIMIF"."DATAQUALITYLOG" (
		"DQTIMESTAMP" TIMESTAMP NOT NULL,
		"RESULTAAT" CHAR(5),
		"RESULTAATINHOUD" CHAR(5) NOT NULL,
		"SCHEMANAAM" VARCHAR2(80) NOT NULL,
		"TABELNAAM" VARCHAR2(160) NOT NULL,
		"DQNAAM" VARCHAR2(80) NOT NULL
	);

CREATE TABLE "DIMIF"."LEVERING" (
		"BRON" VARCHAR2(80) NOT NULL,
		"LEVERING" VARCHAR2(60) NOT NULL,
		"OPVOERDATUM" DATE,
		"TYPELEVERING" CHAR(3) NOT NULL
	);

CREATE TABLE "DIMIF"."LEVERINGBESTAND" (
		"BRON" VARCHAR2(80) NOT NULL,
		"LEVERING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL,
		"LOCATIEBESTAND" VARCHAR2(2000) NOT NULL,
		"PAKBONNAAM" VARCHAR2(99),
		"CHARACTERSET" VARCHAR2(99)
	);

CREATE TABLE "DIMIF"."LEVERINGBESTANDEN" (
		"BRON" VARCHAR2(80) NOT NULL,
		"LEVERING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL,
		"BESTANDSNAAM" VARCHAR2(80) NOT NULL,
		"TABELNAAM" VARCHAR2(80) NOT NULL,
		"FIXEDLENGTHINDICATOR" CHAR(1),
		"DELIMITER" CHAR(1),
		"KOPREGELINDICATOR" CHAR(1),
		"VOETREGELINDICATOR" CHAR(1),
		"NULLWAARDE" CHAR(5)
	);

CREATE TABLE "DIMIF"."LEVERINGDATABASELINK" (
		"REVISIE" NUMBER NOT NULL,
		"BRON" VARCHAR2(80) NOT NULL,
		"LEVERING" VARCHAR2(60) NOT NULL,
		"DBLINKNAAM" VARCHAR2(30) NOT NULL,
		"SCHEMANAAM" VARCHAR2(30) NOT NULL
	);

CREATE TABLE "DIMIF"."LEVERINGDATAPUMP" (
		"BRON" VARCHAR2(80) NOT NULL,
		"LEVERING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL,
		"DATAPUMPNAAM" VARCHAR2(99),
		"DATAPUMPDIRECTORY" VARCHAR2(99),
		"PARBESTANDSNAAM" VARCHAR2(99),
		"LOGBESTANDSNAAM" VARCHAR2(99)
	);

CREATE TABLE "DIMIF"."LEVERINGINHOUD" (
		"INHOUDLEVERING" CHAR(5) NOT NULL,
		"OMSCHRIJVING" CHAR(5)
	);

CREATE TABLE "DIMIF"."LEVERINGKOLOM" (
		"BRON" VARCHAR2(80) NOT NULL,
		"LEVERING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL,
		"SCHEMANAAM" CHAR(80) NOT NULL,
		"TABELNAAM" CHAR(80) NOT NULL,
		"KOLOM" CHAR(80) NOT NULL,
		"COMMENT" VARCHAR2(2000),
		"IDENTIFICEREND_IND" CHAR(1) NOT NULL,
		"DATATYPE" VARCHAR2(40) NOT NULL,
		"DATATYPELENGTE" NUMBER,
		"SCALE" NUMBER,
		"DATUMFORMATMASK" VARCHAR2(40),
		"VERPLICHT" CHAR(1),
		"KOLOMVOLGORDE" NUMBER NOT NULL
	);

CREATE TABLE "DIMIF"."LEVERINGREVISIE" (
		"BRON" VARCHAR2(80) NOT NULL,
		"LEVERING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL,
		"STARTTIJD" TIMESTAMP,
		"EINDTIJD" TIMESTAMP,
		"OMSCHRIJVING" VARCHAR2(80),
		"FREQUENTIE" VARCHAR2(80) NOT NULL,
		"WACHTTIJDINMIN" NUMBER(5 , 0),
		"INHOUDLEVERING" CHAR(5) NOT NULL
	);

CREATE TABLE "DIMIF"."LEVERINGTABEL" (
		"BRON" VARCHAR2(80) NOT NULL,
		"LEVERING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL,
		"SCHEMANAAM" CHAR(80) NOT NULL,
		"TABELNAAM" CHAR(80) NOT NULL,
		"VERWERKENINDICATOR" CHAR(1) DEFAULT 'Y' NOT NULL,
		"HISTORIETYPE" CHAR(3) NOT NULL,
		"OMSCHRIJVING" VARCHAR2(400),
		"HARDDELETETERMIJNINDICATOR" NUMBER(6 , 0)
	);

CREATE TABLE "DIMIF"."LEVERINGTYPE" (
		"TYPELEVERING" CHAR(3) NOT NULL,
		"NAAM" VARCHAR2(10),
		"OMSCHRIJVING" VARCHAR2(200)
	);

CREATE TABLE "DIMIF"."MASKERINGTYPE" (
		"MASKERINGTYPE" CHAR(20) NOT NULL,
		"MASKEERTABEL" VARCHAR2(160) NOT NULL,
		"MASKERINGTECHNIEKSTRING" VARCHAR2(4000)
	);

CREATE TABLE "DIMIF"."VERWERKING" (
		"BRON" VARCHAR2(80) NOT NULL,
		"VERWERKING" VARCHAR2(60) NOT NULL,
		"TABLESPACENAAM" VARCHAR2(80)
	);

CREATE TABLE "DIMIF"."VERWERKINGBESTAND" (
		"BRON" VARCHAR2(80) NOT NULL,
		"VERWERKING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL
	);

CREATE TABLE "DIMIF"."VERWERKINGDATABASELINK" (
		"BRON" VARCHAR2(80) NOT NULL,
		"VERWERKING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL
	);

CREATE TABLE "DIMIF"."VERWERKINGDATAPUMP" (
		"BRON" VARCHAR2(80) NOT NULL,
		"VERWERKING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL
	);

CREATE TABLE "DIMIF"."VERWERKINGKOLOM" (
		"BRON" VARCHAR2(80) NOT NULL,
		"VERWERKING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL,
		"SCHEMANAAM" VARCHAR2(80) NOT NULL,
		"TABELNAAM" VARCHAR2(80) NOT NULL,
		"KOLOM" VARCHAR2(80) NOT NULL,
		"AFGELEIDESQL" VARCHAR2(4000),
		"DATATYPE" VARCHAR2(80),
		"AFGELEIDEKOLOMNAAM" VARCHAR2(80),
		"KOLOMCOMMENT" VARCHAR2(4000),
		"MASKERINGTYPE" CHAR(5),
		"OPNEMENOKV_IND" CHAR(1),
		"OKVNAAM" VARCHAR2(80),
		"DATATYPELENGTE" NUMBER,
		"DATATYPESCALE" CHAR(5),
		"KOLOMVOLGORDE" NUMBER NOT NULL,
		"PKKOLOMVOLGORDE" NUMBER NOT NULL
	);

CREATE TABLE "DIMIF"."VERWERKINGREVISIE" (
		"BRON" VARCHAR2(80) NOT NULL,
		"VERWERKING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL,
		"STARTTIJD" TIMESTAMP,
		"EINDTIJD" TIMESTAMP,
		"OMSCHRIJVING" VARCHAR2(250),
		"DATALIFECYCLEDAGEN" NUMBER
	);

CREATE TABLE "DIMIF"."VERWERKINGTABEL" (
		"BRON" VARCHAR2(80) NOT NULL,
		"VERWERKING" VARCHAR2(60) NOT NULL,
		"REVISIE" NUMBER NOT NULL,
		"SCHEMANAAM" VARCHAR2(80) NOT NULL,
		"TABELNAAM" VARCHAR2(80) NOT NULL,
		"OKVNAAM" VARCHAR2(80),
		"OKVOPNEMEN_IND" CHAR(1),
		"TYPEDATA" CHAR(5)
	);

CREATE TABLE "DIMIF"."VERWERKINGTYPEDATA" (
		"TYPEDATA" CHAR(5) NOT NULL,
		"OMSCHRIJVING" VARCHAR2(80)
	);

CREATE INDEX "DIMIF"."DATAQUALITYLOG_PK_IDX"
	ON "DIMIF"."DATAQUALITYLOG" ("SCHEMANAAM","TABELNAAM","DQNAAM","DQTIMESTAMP");

CREATE INDEX "DIMIF"."DATAQUALITY_PK_IDX"
	ON "DIMIF"."DATAQUALITY" ("SCHEMANAAM","TABELNAAM","DQNAAM");

CREATE INDEX "DIMIF"."LEVERINGBESTANDEN_PK_IDX"
	ON "DIMIF"."LEVERINGBESTANDEN" ("BRON","LEVERING","REVISIE","BESTANDSNAAM");

CREATE INDEX "DIMIF"."LEVERINGBESTAND_PK_IDX"
	ON "DIMIF"."LEVERINGBESTAND" ("BRON","LEVERING","REVISIE");

CREATE INDEX "DIMIF"."LEVERINGDATABASELINK_PK_IDX"
	ON "DIMIF"."LEVERINGDATABASELINK" ("BRON","LEVERING","REVISIE");

CREATE INDEX "DIMIF"."LEVERINGDATAPUMP_PK_IDX"
	ON "DIMIF"."LEVERINGDATAPUMP" ("BRON","LEVERING","REVISIE");

CREATE INDEX "DIMIF"."LEVERINGINHOUD_PK_IDX"
	ON "DIMIF"."LEVERINGINHOUD" ("INHOUDLEVERING");

CREATE INDEX "DIMIF"."LEVERINGKOLOM_PK_IDX"
	ON "DIMIF"."LEVERINGKOLOM" ("BRON","LEVERING","REVISIE","SCHEMANAAM","TABELNAAM","KOLOM");

CREATE INDEX "DIMIF"."LEVERINGREVISIE_PK_IDX"
	ON "DIMIF"."LEVERINGREVISIE" ("BRON","LEVERING","REVISIE");

CREATE INDEX "DIMIF"."LEVERINGTABEL_PK_IDX"
	ON "DIMIF"."LEVERINGTABEL" ("BRON","LEVERING","REVISIE","SCHEMANAAM","TABELNAAM");

CREATE INDEX "DIMIF"."LEVERINGTYPE_PK_IDX"
	ON "DIMIF"."LEVERINGTYPE" ("TYPELEVERING");

CREATE INDEX "DIMIF"."LEVERING_PK_IDX"
	ON "DIMIF"."LEVERING" ("BRON","LEVERING");

CREATE INDEX "DIMIF"."MASKERINGTYPE_PK_IDX"
	ON "DIMIF"."MASKERINGTYPE" ("MASKERINGTYPE");

CREATE INDEX "DIMIF"."VERWERKINGKOLOM_PK_IDX"
	ON "DIMIF"."VERWERKINGKOLOM" ("BRON","VERWERKING","REVISIE","SCHEMANAAM","TABELNAAM","KOLOM");

CREATE INDEX "DIMIF"."VERWERKINGREVISIE_PK_IDX"
	ON "DIMIF"."VERWERKINGREVISIE" ("BRON","VERWERKING","REVISIE");

CREATE INDEX "DIMIF"."VERWERKINGTABEL_PK_IDX"
	ON "DIMIF"."VERWERKINGTABEL" ("BRON","VERWERKING","REVISIE","SCHEMANAAM","TABELNAAM");

CREATE INDEX "DIMIF"."VERWERKINGTYPEDATA_PK_IDX"
	ON "DIMIF"."VERWERKINGTYPEDATA" ("TYPEDATA");

CREATE INDEX "DIMIF"."VERWERKING_PK_IDX"
	ON "DIMIF"."VERWERKING" ("BRON","VERWERKING");

ALTER TABLE "DIMIF"."BRON" ADD CONSTRAINT "BRON_PK" PRIMARY KEY
	("BRON") USING INDEX "DIMIF"."BRON_BRON_IDX";

ALTER TABLE "DIMIF"."DATAQUALITY" ADD CONSTRAINT "DATAQUALITY_PK" PRIMARY KEY
	("SCHEMANAAM",
	 "TABELNAAM",
	 "DQNAAM") USING INDEX "DIMIF"."DATAQUALITY_PK_IDX";

ALTER TABLE "DIMIF"."DATAQUALITYLOG" ADD CONSTRAINT "DATAQUALITYLOG_PK" PRIMARY KEY
	("SCHEMANAAM",
	 "TABELNAAM",
	 "DQNAAM",
	 "DQTIMESTAMP") USING INDEX "DIMIF"."DATAQUALITYLOG_PK_IDX";

ALTER TABLE "DIMIF"."LEVERING" ADD CONSTRAINT "LEVERING_PK" PRIMARY KEY
	("BRON",
	 "LEVERING") USING INDEX "DIMIF"."LEVERING_PK_IDX";

ALTER TABLE "DIMIF"."LEVERINGBESTAND" ADD CONSTRAINT "LEVERINGBESTAND_PK" PRIMARY KEY
	("BRON",
	 "LEVERING",
	 "REVISIE") USING INDEX "DIMIF"."LEVERINGBESTAND_PK_IDX";

ALTER TABLE "DIMIF"."LEVERINGBESTANDEN" ADD CONSTRAINT "LEVERINGBESTANDEN_PK" PRIMARY KEY
	("BRON",
	 "LEVERING",
	 "REVISIE",
	 "BESTANDSNAAM") USING INDEX "DIMIF"."LEVERINGBESTANDEN_PK_IDX";

ALTER TABLE "DIMIF"."LEVERINGDATABASELINK" ADD CONSTRAINT "LEVERINGDATABASELINK_PK" PRIMARY KEY
	("BRON",
	 "LEVERING",
	 "REVISIE") USING INDEX "DIMIF"."LEVERINGDATABASELINK_PK_IDX";

ALTER TABLE "DIMIF"."LEVERINGDATAPUMP" ADD CONSTRAINT "LEVERINGDATAPUMP_PK" PRIMARY KEY
	("BRON",
	 "LEVERING",
	 "REVISIE") USING INDEX "DIMIF"."LEVERINGDATAPUMP_PK_IDX";

ALTER TABLE "DIMIF"."LEVERINGINHOUD" ADD CONSTRAINT "LEVERINGINHOUD_PK" PRIMARY KEY
	("INHOUDLEVERING") USING INDEX "DIMIF"."LEVERINGINHOUD_PK_IDX";

ALTER TABLE "DIMIF"."LEVERINGKOLOM" ADD CONSTRAINT "LEVERINGKOLOM_PK" PRIMARY KEY
	("BRON",
	 "LEVERING",
	 "REVISIE",
	 "SCHEMANAAM",
	 "TABELNAAM",
	 "KOLOM") USING INDEX "DIMIF"."LEVERINGKOLOM_PK_IDX";

ALTER TABLE "DIMIF"."LEVERINGREVISIE" ADD CONSTRAINT "LEVERINGREVISIE_PK" PRIMARY KEY
	("BRON",
	 "LEVERING",
	 "REVISIE") USING INDEX "DIMIF"."LEVERINGREVISIE_PK_IDX";

ALTER TABLE "DIMIF"."LEVERINGTABEL" ADD CONSTRAINT "LEVERINGTABEL_PK" PRIMARY KEY
	("BRON",
	 "LEVERING",
	 "REVISIE",
	 "SCHEMANAAM",
	 "TABELNAAM") USING INDEX "DIMIF"."LEVERINGTABEL_PK_IDX";

ALTER TABLE "DIMIF"."LEVERINGTYPE" ADD CONSTRAINT "LEVERINGTYPE_PK" PRIMARY KEY
	("TYPELEVERING") USING INDEX "DIMIF"."LEVERINGTYPE_PK_IDX";

ALTER TABLE "DIMIF"."MASKERINGTYPE" ADD CONSTRAINT "MASKERINGTYPE_PK" PRIMARY KEY
	("MASKERINGTYPE") USING INDEX "DIMIF"."MASKERINGTYPE_PK_IDX";

ALTER TABLE "DIMIF"."VERWERKING" ADD CONSTRAINT "VERWERKING_PK" PRIMARY KEY
	("BRON",
	 "VERWERKING") USING INDEX "DIMIF"."VERWERKING_PK_IDX";

ALTER TABLE "DIMIF"."VERWERKINGKOLOM" ADD CONSTRAINT "VERWERKINGKOLOM_PK" PRIMARY KEY
	("BRON",
	 "VERWERKING",
	 "REVISIE",
	 "SCHEMANAAM",
	 "TABELNAAM",
	 "KOLOM") USING INDEX "DIMIF"."VERWERKINGKOLOM_PK_IDX";

ALTER TABLE "DIMIF"."VERWERKINGREVISIE" ADD CONSTRAINT "VERWERKINGREVISIE_PK" PRIMARY KEY
	("BRON",
	 "VERWERKING",
	 "REVISIE") USING INDEX "DIMIF"."VERWERKINGREVISIE_PK_IDX";

ALTER TABLE "DIMIF"."VERWERKINGTABEL" ADD CONSTRAINT "VERWERKINGTABEL_PK" PRIMARY KEY
	("BRON",
	 "VERWERKING",
	 "REVISIE",
	 "SCHEMANAAM",
	 "TABELNAAM") USING INDEX "DIMIF"."VERWERKINGTABEL_PK_IDX";

ALTER TABLE "DIMIF"."VERWERKINGTYPEDATA" ADD CONSTRAINT "VERWERKINGTYPEDATA_PK" PRIMARY KEY
	("TYPEDATA") USING INDEX "DIMIF"."VERWERKINGTYPEDATA_PK_IDX";

ALTER TABLE "DIMIF"."DATAQUALITYLOG" ADD CONSTRAINT "DATAQUALITYLOG_DATAQUALITY_FK" FOREIGN KEY
	("SCHEMANAAM",
	 "TABELNAAM",
	 "DQNAAM")
	REFERENCES "DIMIF"."DATAQUALITY"
	("SCHEMANAAM",
	 "TABELNAAM",
	 "DQNAAM");

ALTER TABLE "DIMIF"."LEVERING" ADD CONSTRAINT "LEVERING_BRON_FK" FOREIGN KEY
	("BRON")
	REFERENCES "DIMIF"."BRON"
	("BRON");

ALTER TABLE "DIMIF"."LEVERING" ADD CONSTRAINT "LEVERING_BRON_FK1" FOREIGN KEY
	("BRON")
	REFERENCES "DIMIF"."BRON"
	("BRON");

ALTER TABLE "DIMIF"."LEVERING" ADD CONSTRAINT "LEVERING_LEVERINGTYPE_FK" FOREIGN KEY
	("TYPELEVERING")
	REFERENCES "DIMIF"."LEVERINGTYPE"
	("TYPELEVERING");

ALTER TABLE "DIMIF"."LEVERINGBESTAND" ADD CONSTRAINT "LEVERINGBESTA_LEVERINGREVIS_FK" FOREIGN KEY
	("BRON",
	 "LEVERING",
	 "REVISIE")
	REFERENCES "DIMIF"."LEVERINGREVISIE"
	("BRON",
	 "LEVERING",
	 "REVISIE");

ALTER TABLE "DIMIF"."LEVERINGBESTANDEN" ADD CONSTRAINT "LEVERINGBESTAN_LEVERINGBEST_FK" FOREIGN KEY
	("BRON",
	 "LEVERING",
	 "REVISIE")
	REFERENCES "DIMIF"."LEVERINGBESTAND"
	("BRON",
	 "LEVERING",
	 "REVISIE");

ALTER TABLE "DIMIF"."LEVERINGDATABASELINK" ADD CONSTRAINT "LEVERINGDATABAS_LEVERINGRE_FK" FOREIGN KEY
	("BRON",
	 "LEVERING",
	 "REVISIE")
	REFERENCES "DIMIF"."LEVERINGREVISIE"
	("BRON",
	 "LEVERING",
	 "REVISIE");

ALTER TABLE "DIMIF"."LEVERINGDATAPUMP" ADD CONSTRAINT "LEVERINGDATAP_LEVERINGREVI_FK" FOREIGN KEY
	("BRON",
	 "LEVERING",
	 "REVISIE")
	REFERENCES "DIMIF"."LEVERINGREVISIE"
	("BRON",
	 "LEVERING",
	 "REVISIE");

ALTER TABLE "DIMIF"."LEVERINGKOLOM" ADD CONSTRAINT "LEVERINGKOLOM_LEVERINGTABEL_FK" FOREIGN KEY
	("BRON",
	 "LEVERING",
	 "REVISIE",
	 "SCHEMANAAM",
	 "TABELNAAM")
	REFERENCES "DIMIF"."LEVERINGTABEL"
	("BRON",
	 "LEVERING",
	 "REVISIE",
	 "SCHEMANAAM",
	 "TABELNAAM");

ALTER TABLE "DIMIF"."LEVERINGREVISIE" ADD CONSTRAINT "LEVERINGREVISIE_LEVERING_FK" FOREIGN KEY
	("BRON",
	 "LEVERING")
	REFERENCES "DIMIF"."LEVERING"
	("BRON",
	 "LEVERING");

ALTER TABLE "DIMIF"."LEVERINGREVISIE" ADD CONSTRAINT "LEVERINGREVISIE_LEVERING_FK1" FOREIGN KEY
	("BRON",
	 "LEVERING")
	REFERENCES "DIMIF"."LEVERING"
	("BRON",
	 "LEVERING");

ALTER TABLE "DIMIF"."LEVERINGREVISIE" ADD CONSTRAINT "LEVERINGREVISIE_LEVERING_FK2" FOREIGN KEY
	("BRON",
	 "LEVERING")
	REFERENCES "DIMIF"."LEVERING"
	("BRON",
	 "LEVERING");

ALTER TABLE "DIMIF"."LEVERINGREVISIE" ADD CONSTRAINT "LEVERINGREVISIE_LEVERING_FK3" FOREIGN KEY
	("BRON",
	 "LEVERING")
	REFERENCES "DIMIF"."LEVERING"
	("BRON",
	 "LEVERING");

ALTER TABLE "DIMIF"."LEVERINGREVISIE" ADD CONSTRAINT "LEVERINGREVIS_LEVERINGINHO_FK" FOREIGN KEY
	("INHOUDLEVERING")
	REFERENCES "DIMIF"."LEVERINGINHOUD"
	("INHOUDLEVERING");

ALTER TABLE "DIMIF"."LEVERINGTABEL" ADD CONSTRAINT "LEVERINGTABE_LEVERINGREVISI_FK" FOREIGN KEY
	("BRON",
	 "LEVERING",
	 "REVISIE")
	REFERENCES "DIMIF"."LEVERINGREVISIE"
	("BRON",
	 "LEVERING",
	 "REVISIE");

ALTER TABLE "DIMIF"."VERWERKING" ADD CONSTRAINT "VERWERKING_BRON_FK" FOREIGN KEY
	("BRON")
	REFERENCES "DIMIF"."BRON"
	("BRON");

ALTER TABLE "DIMIF"."VERWERKINGBESTAND" ADD CONSTRAINT "VERWERKINGBES_VERWERKINGREV_FK" FOREIGN KEY
	("BRON",
	 "VERWERKING",
	 "REVISIE")
	REFERENCES "DIMIF"."VERWERKINGREVISIE"
	("BRON",
	 "VERWERKING",
	 "REVISIE");

ALTER TABLE "DIMIF"."VERWERKINGDATABASELINK" ADD CONSTRAINT "VERWERKINGDATAB_VERWERKING_FK" FOREIGN KEY
	("BRON",
	 "VERWERKING",
	 "REVISIE")
	REFERENCES "DIMIF"."VERWERKINGREVISIE"
	("BRON",
	 "VERWERKING",
	 "REVISIE");

ALTER TABLE "DIMIF"."VERWERKINGDATAPUMP" ADD CONSTRAINT "VERWERKINGDAT_VERWERKINGRE_FK" FOREIGN KEY
	("BRON",
	 "VERWERKING",
	 "REVISIE")
	REFERENCES "DIMIF"."VERWERKINGREVISIE"
	("BRON",
	 "VERWERKING",
	 "REVISIE");

ALTER TABLE "DIMIF"."VERWERKINGKOLOM" ADD CONSTRAINT "VERWERKINGKOLO_MASKERINGTYP_FK" FOREIGN KEY
	("MASKERINGTYPE")
	REFERENCES "DIMIF"."MASKERINGTYPE"
	("MASKERINGTYPE");

ALTER TABLE "DIMIF"."VERWERKINGKOLOM" ADD CONSTRAINT "VERWERKINGKOL_VERWERKINGTAB_FK" FOREIGN KEY
	("BRON",
	 "VERWERKING",
	 "REVISIE",
	 "SCHEMANAAM",
	 "TABELNAAM")
	REFERENCES "DIMIF"."VERWERKINGTABEL"
	("BRON",
	 "VERWERKING",
	 "REVISIE",
	 "SCHEMANAAM",
	 "TABELNAAM");

ALTER TABLE "DIMIF"."VERWERKINGREVISIE" ADD CONSTRAINT "VERWERKINGREVISI_VERWERKIN_FK" FOREIGN KEY
	("BRON",
	 "VERWERKING")
	REFERENCES "DIMIF"."VERWERKING"
	("BRON",
	 "VERWERKING");

ALTER TABLE "DIMIF"."VERWERKINGTABEL" ADD CONSTRAINT "VERWERKINGTA_VERWERKINGREVI_FK" FOREIGN KEY
	("BRON",
	 "VERWERKING",
	 "REVISIE")
	REFERENCES "DIMIF"."VERWERKINGREVISIE"
	("BRON",
	 "VERWERKING",
	 "REVISIE");

ALTER TABLE "DIMIF"."VERWERKINGTABEL" ADD CONSTRAINT "VERWERKINGT_VERWERKINGTYPE_FK" FOREIGN KEY
	("TYPEDATA")
	REFERENCES "DIMIF"."VERWERKINGTYPEDATA"
	("TYPEDATA");

COMMENT ON COLUMN "DIMIF"."DATAQUALITY"."DQALERT" IS
'DQ ALert => Dit levert een Alert op of niet.  Bij een Alert moet iemand of iets een alert krijgen. >  Integratie met ServicesDesk of een SMS / Email / Teams Channel.';

COMMENT ON COLUMN "DIMIF"."DATAQUALITY"."DQIMPACTLEVEL" IS
'DQ IMpact level:
0 
1
2

Dit zou in een aparte tabel kunnen. ';

COMMENT ON COLUMN "DIMIF"."LEVERINGBESTAND"."CHARACTERSET" IS
'ASCII UTF8  
windows 1252
';

COMMENT ON COLUMN "DIMIF"."LEVERINGBESTAND"."LOCATIEBESTAND" IS
'Absolute pad voor de locatie';

COMMENT ON COLUMN "DIMIF"."LEVERINGKOLOM"."COMMENT" IS
'Beschrijving van kolom';

COMMENT ON COLUMN "DIMIF"."LEVERINGKOLOM"."DATATYPE" IS
'Datatype : VARCHAR | NUMBER | Date |timestamp | etc.';

COMMENT ON COLUMN "DIMIF"."LEVERINGKOLOM"."DATUMFORMATMASK" IS
'Datum Format  YYYYMMDD of  DD-MM-YYYY of DD-MMM-YY';

COMMENT ON COLUMN "DIMIF"."LEVERINGKOLOM"."IDENTIFICEREND_IND" IS
'Is het veld persoonlijk identificerend';

COMMENT ON COLUMN "DIMIF"."LEVERINGKOLOM"."SCHEMANAAM" IS
'Het schema is naam is een concat   :  STG_<bron>   of   IMP_<Bron> 

Het voelt wel een beetje als duplicaat van bron.';

COMMENT ON COLUMN "DIMIF"."LEVERINGKOLOM"."VERPLICHT" IS
'v';

COMMENT ON COLUMN "DIMIF"."LEVERINGTABEL"."SCHEMANAAM" IS
'Het schema is naam is een concat   :  STG_<bron>   of   IMP_<Bron> 

Het voelt wel een beetje als duplicaat van bron.';

COMMENT ON COLUMN "DIMIF"."LEVERINGTABEL"."VERWERKENINDICATOR" IS
'0,1 indicator';

COMMENT ON COLUMN "DIMIF"."VERWERKING"."TABLESPACENAAM" IS
'Tablespaces format zou nog kunnen worden afgesteld per _ layer
BRONZONE_<Naam>
STAGING_<Naam> 
Waardoor je maar 1 Naam hoef te gebruiken. Hierdoor krijg je meerdere tablespaces, dit dient te worden afgestemd met DBA.';

COMMENT ON COLUMN "DIMIF"."VERWERKINGKOLOM"."AFGELEIDESQL" IS
'


Zie  DL_RLO_REFERNTIE_TB';

COMMENT ON COLUMN "DIMIF"."VERWERKINGKOLOM"."DATATYPE" IS
'Wil je dit als   VARCHAR(200)  of NUMBER(12,3)  of NUMBER   en in een part attribuut de lengte en scale ?';

COMMENT ON COLUMN "DIMIF"."VERWERKINGKOLOM"."OKVNAAM" IS
'Veldnaam in OKV. Dit is de business naam.';

COMMENT ON COLUMN "DIMIF"."VERWERKINGKOLOM"."OPNEMENOKV_IND" IS
'Indicator of deze moet worden opgenomen OKV';

COMMENT ON COLUMN "DIMIF"."VERWERKINGKOLOM"."PKKOLOMVOLGORDE" IS
'Deze heb ik bij Verwerking neer gezet en niet bij Levering. want je hebt hem bij de verwerking nodig ....  Maar je kunt ook de andere redenatie hanteren... (voelt als om het even)';

COMMENT ON COLUMN "DIMIF"."VERWERKINGREVISIE"."DATALIFECYCLEDAGEN" IS
'Hoelang moet een rij worden bewaard uit een tabel na laatste update. Geteld in dagen.  3660 (is dus 10 jaar) ';

COMMENT ON TABLE "DIMIF"."BRON" IS
'Bron: Dit is de Bron applicatie naam';

COMMENT ON TABLE "DIMIF"."DATAQUALITY" IS
'Data Quality tabel is voor het vastleggen van alle data quality checks query
Deze worden vast gelegd op Schema tabel naam 
In de DQNaam,  deze is bedoeld om de queries uniek te maken op schema/tabel.  er kunnen namelijk meerdere queries worden afgevoerd voor controle


Het format van de query hebben altijd een vast stramien.

De logging van de executie van de queries is alsvolgt

''Schema'',''Tabel'',''DQNaam'',Tijdstip,Result  0,1,2 , ''inhoudlijk result waanneer aanwezig 

result 0,1,2
0=Geslaagd
1=Warning (dit is een waarschuwing
2=Error  (dus danig fout dat de dataflow proces moet worden gestopt)

NB Gaat dit ook op REVISIE?    
	Ik denk het niet....  Maar het heeft er wel impact op.';

COMMENT ON TABLE "DIMIF"."DATAQUALITYLOG" IS
'De logging van de executie van de queries is alsvolgt

''Schema'',''Tabel'',''DQNaam'',Tijdstip,Result  0,1,2 , ''inhoudlijk result waanneer aanwezig 

result 0,1,2
0=Geslaagd
1=Warning (dit is een waarschuwing
2=Error  (dus danig fout dat de dataflow proces moet worden gestopt)';

COMMENT ON TABLE "DIMIF"."LEVERING" IS
'Levering:
hier wordt de levering bepaald per bron

alle gegevens die op dit niveau liggen voor de aanlevering worden hier opgenomen.

Frequenteie:  op crontab defintiie invoeren?


Corrupte levering afhandeling type?  gaat dit op verschillende wijzes plaats vinden?  Weet ik nog niet.';

COMMENT ON TABLE "DIMIF"."LEVERINGBESTAND" IS
'

- kopregel
- voetregel
fixedlenght
charactset
pakbon

alle bestand atributen gaan hier in.';

COMMENT ON TABLE "DIMIF"."LEVERINGDATABASELINK" IS
'DL_RLO_TYPE_DBLINK


DBLINK_ID	NUMBER	Yes		1	PK en ID van Type dblink
DL_ID	NUMBER	Yes		2	Data leverings identificatie van het Type Dblink
DBLINK_NAAM	VARCHAR2(99 CHAR)	Yes		3	Naam van het type dblink
DBLINK_SCHEMANAAM	VARCHAR2(99 CHAR)	Yes		4	Schemanaam van de dblink
TRIGGER_TYPE	VARCHAR2(9 CHAR)	Yes		5	Het type signaal dat aan DIM informeert dat de database gereed is voor levering van de data. (Tabel, View, Bestand)
TRIGGER_SCHEMANAAM	VARCHAR2(99 CHAR)	Yes		6	Naam van het schema dat de tabel met het signaal bevat. (Van toepassing op trigger types Tabel, View)
TRIGGER_TABELNAAM	VARCHAR2(99 CHAR)	Yes		7	Naam van de tabel die het signaal bevat. (Van toepassing op trigger types Tabel, View)
TRIGGER_KOLOM	VARCHAR2(99 CHAR)	Yes		8	Naam van de kolom die het signaal bevat. (Van toepassing op trigger types Tabel, View)
TRIGGER_BESTANDSNAAM_MASK	VARCHAR2(99 CHAR)	Yes		9	Masker voor de naam van het bestand dat het signaal bevat. (Van toepassing op trigger type Bestand)
DBLINK_IND_ARCHIVERING	VARCHAR2(9 CHAR)	Yes		10	Indicatie of creatie van back-up nodig is (J/N)
DBLINK_IND_SCN_GEBRUIK	VARCHAR2(9 CHAR)	Yes		11	Indicatie of gebruik moet worden gemaakt van een SCN in de SQL op de brondata (J/N)
DBLINK_STARTDATUM	DATE	Yes		12	PK en Startdatum van de dblink
DBLINK_EINDDATUM	DATE	Yes	date ''9999-12-31''	13	Einddatum van de dblink';

COMMENT ON TABLE "DIMIF"."LEVERINGDATAPUMP" IS
'
Hieronder  DL_RLO_TYPE_DATAPUMP_TB  check velden. 


DATAPUMP_ID	NUMBER	Yes		1	PK en ID van Type datapump
DL_ID	NUMBER	Yes		2	Data levering identificatie van het Type Datapump
DATAPUMP_NAAM	VARCHAR2(99 CHAR)	Yes		3	Naam van het type datapump
DATAPUMP_DIRECTORY	VARCHAR2(99 CHAR)	Yes		4	Oracle Directory aan bronkant waar DUMP geplaatst wordt
DATAPUMP_PAR_BESTANDSNAAM_MASK	VARCHAR2(99 CHAR)	Yes		5	Masker voor Parfilenaam van de datapump
DATAPUMP_LOG_BESTANDSNAAM_MASK	VARCHAR2(99 CHAR)	Yes		6	Masker voor Logfilenaam van de datapump
DATAPUMP_DMP_BESTANDSNAAM_MASK	VARCHAR2(99 CHAR)	Yes		7	Masker van de Dumpfilenaam van de datapump
DATAPUMP_VERSION	VARCHAR2(99 CHAR)	Yes		8	Bevat de laagste van de twee Oracle versies waartussen de data levering plaats vindt
DATAPUMP_IND_METRICS	VARCHAR2(9 CHAR)	Yes		9	Indicatie die aangeeft of additionele informatie van de export in het .log bestand vastlegd moet worden (J/N)
DATAPUMP_LOGTIME	VARCHAR2(9 CHAR)	Yes		10	Specificeert welke berichten terugkomen in de log (NONE / STATUS / LOGFILE / ALL)
DATAPUMP_COMPRESSION	VARCHAR2(99 CHAR)	Yes		11	Specificeert welke gegevens gecomprimeerd moeten worden bij het wegschrijven van de dump (ALL / DATA_ONLY / METADATA_ONLY / NONE)
DATAPUMP_CONTENT	VARCHAR2(99 CHAR)	Yes		12	Specificeert welke objecten terugkomen in de dump (ALL / DATA_ONLY / METADATA_ONLY)
DATAPUMP_PARALLEL	VARCHAR2(9 CHAR)	Yes		13	Het aantal parallelle processen wat gebruikt is voor de dump
DATAPUMP_EXCLUDE	VARCHAR2(99 CHAR)	Yes		14	Specificeert welke objecten zijn uitgesloten uit de dump
';

COMMENT ON TABLE "DIMIF"."LEVERINGINHOUD" IS
'
Full
Delta
Incrementeel';

COMMENT ON TABLE "DIMIF"."LEVERINGKOLOM" IS
'KolomLevering:  Deze bevast alle kolomen die de levering bevatten. Hier ';

COMMENT ON TABLE "DIMIF"."LEVERINGREVISIE" IS
'Hier zit de Revisie,
een revisie ontstaat, bij een wijziging: Bestandslevering locatie, datapumplevering wjiziging, dblink levering wijziging, of als de inhoud wijzigd(FULL/ DELTA / Incrementeel
diT IS een testje';

COMMENT ON TABLE "DIMIF"."LEVERINGTABEL" IS
'Tabel Levering: Alle tabellen die bij de levering horen van de Bron.

Historietype: opgebouwd, niet opgebouwd, moet worden opgebouwd (dan stapelen met tijdlijn)';

COMMENT ON TABLE "DIMIF"."LEVERINGTYPE" IS
'type levering
bestand
datapump
databaselink
bericht

oorsprongelijk : dim_metadata.dl_type_datalevering_tb';

COMMENT ON TABLE "DIMIF"."MASKERINGTYPE" IS
'Zie DL_MASKEER_SBELEID_TB


';

COMMENT ON TABLE "DIMIF"."VERWERKING" IS
'Verwerking:   De spliting tuussen';

COMMENT ON TABLE "DIMIF"."VERWERKINGBESTAND" IS
'Bestands Verwerking
Hierin worden specifieke informatie opgenoemen voor de verwerking die bij een bestandenlevering horen. De even knie van deze tabel is : bestandslevering (waarin alleen specifieke levering informatie staat. .  We zouden er voor kunnen kiezen om deze samen te voegen.';

COMMENT ON TABLE "DIMIF"."VERWERKINGDATABASELINK" IS
'databaselink  Verwerking
Hierin worden specifieke informatie opgenoemen voor de verwerking die bij een databaselinklevering horen. De even knie van deze tabel is : databaselinkslevering (waarin alleen specifieke levering informatie staat. .  We zouden er voor kunnen kiezen om deze samen te voegen.';

COMMENT ON TABLE "DIMIF"."VERWERKINGDATAPUMP" IS
'Datapump Verwerking
Hierin worden specifieke informatie opgenoemen voor de verwerking die bij een datapump horen. De even knie van deze tabel is : datapump levering (waarin alleen specifieke levering informatie staat. .  We zouden er voor kunnen kiezen om deze samen te voegen.';

COMMENT ON TABLE "DIMIF"."VERWERKINGKOLOM" IS
'Check de tabel  DL_RLO_REFERENTIE_TB  dit wordt volgens mij allemaal opgenomen in deze tabel 

Op basis van Tabelverwerking en kolomverwerking kan een view worden gemaakt om de transformation view structuur te geven.

';

COMMENT ON TABLE "DIMIF"."VERWERKINGTABEL" IS
'Tabel Verwerking, hierin komen de attributen te staan die de verwerking van een Tabel nodig hebben.
HIeraan kun je denken, welke specifieke info benodigd is om de DDL te genereren. 


Voor de verwerking is het noodzakelijk om een 
Technische PK te hebben (unique key)
en een business PK .  Wellicht moeten we die kolomen zo aanduiden in de kolomen.. 

CHECK  DL_RLO_ENTITEIT_TB


Ik vind nog steeds dat wat geen aparte structuur nodig hebben voor indexes die specifiek zijn en die we willen laten mee genereren.  Totdat het tegendeel wordt bewezen. Toevoegen kan altijd nog. Keep it simple. ';

COMMENT ON TABLE "DIMIF"."VERWERKINGTYPEDATA" IS
'TypeDataVerwerking:
is het 
Masterdata : "Productenlijst" (Weinig inserts meer updates)
Transactionneel : "Transctioneel" Veel Inserts geen updates
Referentiedata (Referentie data die nodig , nog statischer dan masterdata
Systteemdata : Applicatieve technische data die blijbaar nodig is voorr de verwerking ivm controles of anddere gerelateerde zaken.';

